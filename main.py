import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types.message import ContentType
import markups as nav

TOKEN = "2141163298:AAGz-iSZR9LcBOewuySWAscDHsm4XBxGq3U"
LIQTOKEN = "632593626:TEST:sandbox_i29067075948"

logging.basicConfig(level=logging.INFO)

# Initializate bot
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await bot.send_message(message.from_user.id, '–î–æ–±—Ä–∏–π –¥–µ–Ω—å', reply_markup=nav.mainMenu)


@dp.message_handler()
async def bot_message(message: types.Message):



        if message.text == '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è —Å—Ö—É–¥–µ–Ω–Ω—è':
            await bot.send_message(message.from_user.id, 'üèÖüëü–û–ø–∏—Å –ø—Ä–æ–≥—Ä–∞–º–∏ ‚Äú–°—Ö—É–¥–Ω–µ–Ω–Ω—è‚Äù : '
                                                         ' –Ø–∫—â–æ –≤–∏ –∑–∞–º—ñ—Ç–∏–ª–∏,—â–æ –Ω–∞–±—Ä–∞–ª–∏ –∫—ñ–ª—å–∫–∞ –ª–∏—à–Ω—ñ—Ö –∫—ñ–ª–æ–≥—Ä–∞–º—ñ–≤ ,'
                                                         '–≤—ñ–¥—á—É–≤–∞—î—Ç–µ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç '
                                                         ',–∞–±–æ –º–∞—î—Ç–µ –±–∞–∂–∞–Ω–Ω—è –≤–∏–≥–ª—è–¥–∞—Ç–∏ –±—ñ–ª—å—à –µ—Å—Ç–µ—Ç–∏—á–Ω–æ, '
                                                         '—Ç–æ –≤–∏ –∑—Ä–æ–±–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä, –∫–æ–ª–∏ –∑–∞–≤—ñ—Ç–∞–ª–∏ –¥–æ –Ω–∞—Å. '
                                                         '–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≥–∞—Ä–∞–Ω—Ç—É—î –≤–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∂–µ –∑–∞ –¥–µ–∫—ñ–ª—å–∫–∞ —Ç–∏–∂–Ω—ñ–≤'
                                                         ' –ø–ª—ñ–¥–Ω–æ—ó –ø—Ä–∞—Ü—ñ ,–∞ —Ç–∞–∫–æ–∂ —á—ñ—Ç–∫–∏–º –≥—Ä–∞—Ñ—ñ–∫–æ–º –∑–∞–Ω—è—Ç—å . '
                                                         '–í —Ü—ñ–π –ø—Ä–æ–≥—Ä–∞–º—ñ –í–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —á—ñ—Ç–∫–∏–π –ø–ª–∞–Ω –≤–∞—à–∏—Ö –∑–∞–Ω—è—Ç—å'
                                                         '–Ω–∞ –æ–¥–∏–Ω –º—ñ—Å—è—Ü—å. –Ø–∫—â–æ –≤–∏ –∑–∞—Ü—ñ–∫–∞–≤–ª–µ–Ω—ñ —É –Ω–∞—à–∏—Ö –ø–æ—Å–ª—É–≥–∞—Ö ,'
                                                         '—Ç–æ –º–∏ –ø—Ä–æ–ø–æ–Ω—É—î–º–æ –í–∞–º –ø—Ä–∏–¥–±–∞—Ç–∏ –ø–ª–∞—Ç–Ω—É –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º'
                                                         '–∫–∞–Ω–∞–ª –∑ –∑–∞–Ω—è—Ç—Ç—è–º–∏ –≤—Å—å–æ–≥–æ –ª–∏—à –∑–∞ 149,99 –≥—Ä–Ω.–ú–∏ –≤—ñ—Ä–∏–º–æ —É —Ç–µ–±–µ.',
                                   reply_markup=nav.info_inline_markup)

        elif message.text == '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –Ω–∞–±–æ—Ä—É –º–∞—Å–∏':
            await bot.send_message(message.from_user.id, 'üèÖüí™–û–ø–∏—Å –ø—Ä–æ–≥—Ä–∞–º–∏ ‚Äú–ù–∞–±—ñ—Ä –º–∞—Å–∏‚Äù : '
                                                         '–ó–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∫–æ—é –¥–≤—ñ —Ç—Ä–µ—Ç—ñ—Ö –ª—é–¥—Å—Ç–≤–∞ –Ω–µ–∑–∞–¥–æ–≤–æ–ª–µ–Ω—ñ —Å–≤–æ—ó–º —Ç—ñ–ª–æ–º, '
                                                         '—è–∫—â–æ —Ü–µ –ø—Ä–æ —Ç–µ–±–µ ,—ñ —Ç–∏ –¥–æ—Å—ñ –æ–¥—è–≥–∞—î—à —Å–≤—ñ—Ç—à–æ—Ç–∏ –∑ —Ä–æ–∑–º—ñ—Ä–æ–º S,'
                                                         '—Ç–æ —Ç–µ–±–µ —Å–ø—ñ—Ç–∫–∞–ª–∞ —É–¥–∞—á–∞ ,–±–æ  —Ç–∏ –∑–Ω–∞–π—à–æ–≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É.'
                                                         'BezTwena Team - —Ü–µ —Ç–æ–ø–æ–≤–∏–π –≤–∏–±—ñ—Ä ,'
                                                         '—è–∫—â–æ —Ç–∏ –º–∞—î—à –±–∞–∂–∞–Ω–Ω—è –∑–±—ñ–ª—å—à–∏—Ç–∏ —Å–≤–æ—é —Å—Ç–∞—Ç—É—Ä—É ,'
                                                         '–∞ —Ç–∞–∫–æ–∂ –ø—Ä–∏–≤–µ—Å—Ç–∏ —Ç–≤–æ—î —Ç—ñ–ª–æ –≤ –ø–æ—Ä—è–¥–æ–∫. '
                                                         '–£ –ø—Ä–æ–≥—Ä–∞–º—ñ ‚Äú–ù–∞–±—ñ—Ä –º–∞—Å–∏‚Äù ,—Ç–∏ –∑–Ω–∞–π–¥–µ—à –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –∑'
                                                         ' –ø—Ä–æ–≥—Ä–∞–º–æ—é –≤–ø—Ä–∞–≤ –Ω–∞ –º—ñ—Å—è—Ü—å, —è–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –¥–æ—Å—è–≥–Ω—É—Ç–∏ —Ç–æ–±—ñ '
                                                         '–±–∞–∂–∞–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É. –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ  –ø—Ä–∏–¥–±–∞—Ç–∏ –ø–ª–∞—Ç–Ω—É –ø—ñ–¥–ø–∏—Å–∫—É'
                                                         ' –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –∑ –∑–∞–Ω—è—Ç—Ç—è–º–∏ –≤—Å—å–æ–≥–æ –ª–∏—à –∑–∞ 149,99 –≥—Ä–Ω. '
                                                         '–ú–∏ –≤—ñ—Ä–∏–º–æ —É —Ç–µ–±–µ.',

                                   reply_markup=nav.More_inline_markup)



@dp.callback_query_handler(text="submonth")
async def submonth(call: types.CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    await bot.send_invoice(chat_id=call.from_user.id, title="–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏",
                           description="–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å",
                           payload="month_sub", provider_token=LIQTOKEN, currency="UAH", start_parameter="test_bot",
                           prices=[{"label": "–ì—Ä–Ω", "amount": 15000}])

@dp.callback_query_handler(text="submonth2")
async def submonth2(call: types.CallbackQuery):
    await bot.delete_message(call.from_user.id, call.message.message_id)
    await bot.send_invoice(chat_id=call.from_user.id, title="–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –ø—ñ–¥–ø–∏—Å–∫–∏",
                           description="–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–∏ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å",
                           payload="month_help", provider_token=LIQTOKEN, currency="UAH", start_parameter="test_bot",
                           prices=[{"label": "–ì—Ä–Ω", "amount": 15000}])




@dp.pre_checkout_query_handler()
async def process_pre_checkout_query(pre_checkout_query: types.PreCheckoutQuery):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)


@dp.message_handler(content_types=ContentType.SUCCESSFUL_PAYMENT)
async def process_pay(message: types.Message):
    if message.successful_payment.invoice_payload == "month_sub":
        # –ü—ñ–¥–ø–∏—Å—É—î–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        await bot.send_message(message.from_user.id, "üëü–í–∞–º –≤–∏–¥–∞–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –¥–ª—è —Å—Ö—É–¥–µ–Ω–Ω—è –Ω–∞ –º—ñ—Å—è—Ü—å!üëü",
                                    reply_markup=nav.Pos_inline_markup,)
    elif message.successful_payment.invoice_payload == "month_help":
        await bot.send_message(message.from_user.id, "üëü–í–∞–º –≤–∏–¥–∞–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ —Ç—Ä–µ–Ω—É–≤–∞–Ω—å –¥–ª—è –Ω–∞–±–æ—Ä—É –º–∞—Å–∏ –Ω–∞ –º—ñ—Å—è—Ü—å!üëü",
                               reply_markup=nav.Gyp_inline_markup,)




if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
